import { ConfigPlugin } from "@expo/config-plugins";
import { withStaticSettings } from "./static";
import {
  PSChildPaneSpecifier,
  PSGroupSpecifier,
  SettingsPlist,
} from "./withRootPlist";

// console.log(require('@expo/plist').default.parse(``))

// Replicates the CocoaPods Acknowledgements.plist format
function createAcknowledgementsPanel(
  licenses: { title: string; text: string }[] = []
): SettingsPlist {
  return {
    PreferenceSpecifiers: [
      {
        FooterText:
          "This application makes use of the following third party libraries:",
        Title: "Acknowledgements",
        Type: "PSGroupSpecifier",
      },
      ...licenses.map(
        ({ title, text }) =>
          ({
            FooterText: text,
            Title: title,
            Type: "PSGroupSpecifier",
          } satisfies PSGroupSpecifier)
      ),
      {
        FooterText:
          "Generated by Expo Config Plugins - https://docs.expo.dev/config-plugins/introduction/",
        Title: "",
        Type: "PSGroupSpecifier",
      },
    ],
  };
}

const AcknowledgementsPane: PSChildPaneSpecifier = {
  Type: "PSChildPaneSpecifier",
  Title: "Acknowledgements",
  File: "Acknowledgements",
};

export const withSettingsBundle: ConfigPlugin = (config) => {
  return withStaticSettings(config, {
    Root: {
      locales: {
        en: {
          Name: "Bacon",
        },
        es: {
          Name: "El Baco",
        },
      },
      page: {
        PreferenceSpecifiers: [
          AcknowledgementsPane,
          { Type: "PSGroupSpecifier", Title: "Group" },
          {
            Type: "PSTextFieldSpecifier",
            Title: "Name",
            Key: "name_preference",
            DefaultValue: "",
            IsSecure: false,
            KeyboardType: "Alphabet",
            AutocapitalizationType: "None",
            AutocorrectionType: "No",
          },
          {
            Type: "PSToggleSwitchSpecifier",
            Title: "Enabled",
            Key: "enabled_preference",
            DefaultValue: true,
          },
          {
            Type: "PSSliderSpecifier",
            Key: "slider_preference",
            DefaultValue: 0.5,
            MinimumValue: 0,
            MaximumValue: 1,
            MinimumValueImage: "",
            MaximumValueImage: "",
          },
        ],
      },
    },
    Acknowledgements: {
      page: {
        ...createAcknowledgementsPanel([{ title: "blurhash", text: "foobar" }]),
      },
    },
  });
};

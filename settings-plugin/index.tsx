import { ConfigPlugin } from "@expo/config-plugins";
import { withStaticSettings } from "./static";
import {
  AnyPreferenceSpecifier,
  PSChildPaneSpecifier,
  SettingsPlist,
} from "./schema/SettingsPlist";
import { Group, Slider, Switch, TextField } from "./models";

// console.log(require('@expo/plist').default.parse(``))

// Replicates the CocoaPods Acknowledgements.plist format
function createAcknowledgementsPanel(
  licenses: { title: string; text: string }[] = []
): SettingsPlist {
  return {
    PreferenceSpecifiers: [
      Group({
        title: "Acknowledgements",
        footerText:
          "This application makes use of the following third party libraries:",
      }),
      ...licenses.map(({ title, text }) =>
        Group({
          title,
          footerText: text,
        })
      ),
      Group({
        title:
          "Generated by Expo Config Plugins - https://docs.expo.dev/config-plugins/introduction/",
      }),
    ],
  };
}

const AcknowledgementsPane: PSChildPaneSpecifier = {
  Type: "PSChildPaneSpecifier",
  Title: "Acknowledgements",
  File: "Acknowledgements",
};

function page(specs: AnyPreferenceSpecifier[]): { page: SettingsPlist } {
  return {
    page: {
      PreferenceSpecifiers: specs,
    },
  };
}

export const withSettingsBundle: ConfigPlugin = (config) => {
  return withStaticSettings(config, {
    Root: {
      locales: {
        en: {
          Name: "Bacon",
        },
        es: {
          Name: "El Baco",
        },
      },
      page: {
        PreferenceSpecifiers: [
          AcknowledgementsPane,
          Group({
            title: "Group",
          }),
          TextField({
            title: "Name",
            key: "name_preference",
            value: "",
            keyboardType: "Alphabet",
            autoCapitalize: "None",
            autoCorrect: "No",
          }),
          Switch({
            title: "Enabled",
            key: "enabled_preference",
            value: true,
          }),
          Slider({
            key: "slider_preference",
            value: 0.5,
          }),
        ],
      },
    },
    About: page([]),
    Acknowledgements: {
      page: {
        ...createAcknowledgementsPanel([{ title: "blurhash", text: "foobar" }]),
      },
    },
  });
};
